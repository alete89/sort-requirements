version: 2
jobs:
  lint:
    docker:
      - image: circleci/python:3.8

    steps:
      - checkout

      - restore_cache:
          key: v1-python-{{ .Environment.CIRCLE_JOB }}

      - run:
          name: Create virtualenv
          command: |
            mkdir -p ~/.venv
            virtualenv ~/.venv
            echo "source ~/.venv/bin/activate" >> $BASH_ENV

      - run:
          name: Install dependencies
          command: |
            pip install therapist flake8 black
            pip install .

      - save_cache:
          paths:
            - "~/.venv"
          key: v1-python-{{ .Environment.CIRCLE_JOB }}

      - run:
          name: Lint
          command: therapist run --use-tracked-files

  test: &test-defaults
    docker:
      - image: circleci/python:2.7

    steps:
      - checkout

      - restore_cache:
          key: v1-python-{{ .Environment.CIRCLE_JOB }}

      - run:
          name: Create virtualenv
          command: |
            mkdir -p ~/.venv
            virtualenv ~/.venv
            echo "source ~/.venv/bin/activate" >> $BASH_ENV

      - run:
          name: Install dependencies
          command: |
            pip install -U pytest
            pip install .

      - save_cache:
          paths:
            - "~/.venv"
          key: v1-python-{{ .Environment.CIRCLE_JOB }}

      - run:
          name: Test
          command: py.test -vvv

  test-py27:
    <<: *test-defaults
    docker:
      - image: circleci/python:2.7

  test-py34:
    <<: *test-defaults
    docker:
      - image: circleci/python:3.4

  test-py35:
    <<: *test-defaults
    docker:
      - image: circleci/python:3.5

  test-py36:
    <<: *test-defaults
    docker:
      - image: circleci/python:3.6

  test-py37:
    <<: *test-defaults
    docker:
      - image: circleci/python:3.7

  test-py38:
    <<: *test-defaults
    docker:
      - image: circleci/python:3.8

  build-py2:
    docker:
      - image: circleci/python:2.7

    working_directory: ~/build

    steps:
      - checkout

      - run:
          name: Create distributions
          command: python setup.py bdist_wheel

      - persist_to_workspace:
          root: ~/build
          paths:
            - dist

  build-py3:
    docker:
      - image: circleci/python:3.8

    working_directory: ~/build

    steps:
      - checkout

      - run:
          name: Create distributions
          command: |
            python setup.py sdist
            python setup.py bdist_wheel

      - persist_to_workspace:
          root: ~/build
          paths:
            - dist

  deploy:
    docker:
      - image: circleci/python:3.8

    working_directory:  ~/deploy

    steps:
      - checkout

      - attach_workspace:
          at: ~/deploy

      - restore_cache:
          key: v1-python-{{ .Environment.CIRCLE_JOB }}

      - run:
          name: Create virtualenv
          command: |
            mkdir -p ~/.venv
            virtualenv ~/.venv
            echo "source ~/.venv/bin/activate" >> $BASH_ENV

      - run:
          name: Install dependencies
          command: pip install twine

      - save_cache:
          paths:
            - "~/.venv"
          key: v1-python-{{ .Environment.CIRCLE_JOB }}

      - run:
          name: Verify git tag matches version
          command: python setup.py verify

      - run:
          name: Create .pypirc
          command: |
            echo -e "[pypi]" >> ~/.pypirc
            echo -e "username = rehandalal" >> ~/.pypirc
            echo -e "password = $PYPI_PASSWORD" >> ~/.pypirc

      - run:
          name: Upload to PyPI
          command: twine upload dist/*

workflows:
  version: 2
  test-build-deploy:
    jobs:
      - lint:
          filters:
            tags:
              only: /.*/
      - test-py27:
          filters:
            tags:
              only: /.*/
      - test-py34:
          filters:
            tags:
              only: /.*/
      - test-py35:
          filters:
            tags:
              only: /.*/
      - test-py36:
          filters:
            tags:
              only: /.*/
      - test-py37:
          filters:
            tags:
              only: /.*/
      - test-py38:
          filters:
            tags:
              only: /.*/
      - build-py2:
          requires:
            - lint
            - test-py27
          filters:
            tags:
              only: /.*/
      - build-py3:
          requires:
            - lint
            - test-py34
            - test-py35
            - test-py36
            - test-py37
            - test-py38
          filters:
            tags:
              only: /.*/
      - deploy:
          requires:
            - build-py2
            - build-py3
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
